# -*- coding: utf-8 -*-
"""Q7 - P3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iJFoTjROW0mhC-KsyX5PSHaVHgE62AUk
"""

import numpy as np
import matplotlib.pyplot as plt

def euler_projectile(v0, g0, R, h, t_max):
    # Condições iniciais
    t = 0
    x = 0  # Altura inicial
    v = v0  # Velocidade inicial

    # Listas para armazenar os valores
    t_values = [t]
    x_values = [x]
    v_values = [v]

    # Iteração do Método de Euler
    while v > 0 and t < t_max:
        EDO = g0 * (R ** 2) / (R + x) ** 2  # EDO
        v_novo = v - h * EDO  # Atualiza velocidade
        x_novo = x + h * v  # Atualiza posição
        t += h  # Atualiza tempo

        # Armazena os valores
        t_values.append(t)
        x_values.append(x_novo)
        v_values.append(v_novo)

        # Atualiza variáveis
        v = v_novo
        x = x_novo

    # Altura máxima atingida
    h_max = x_values[-1] / 1000  # Convertendo para km
    t_max_reached = t_values[-1]  # Tempo correspondente à altura máxima

    # Plotando os resultados
    plt.figure(figsize=(8, 5))
    plt.plot(t_values, np.array(x_values) / 1000, label='Altura (km)')
    plt.scatter(t_max_reached, h_max, color='red', marker='o', label=f'Máx: {h_max:.3f} km')
    plt.xlabel('TEMPO (s)')
    plt.ylabel('ALTURA (km)')
    plt.title('ALTURA DO PROJETO EM FUNÇÃO DO TEMPO')
    plt.legend()
    plt.grid()
    plt.show()

    return h_max

# Parâmetros do problema
g0 = 9.81  # m/s² (aceleração da gravidade na superfície)
R = 6.37e6  # m (raio da Terra)
v0 = 1400  # m/s (velocidade inicial)
h = 0.1  # Passo de tempo (s)
t_max = 500  # Tempo máximo de simulação (s)

# Executando o método de Euler
altura_maxima = euler_projectile(v0, g0, R, h, t_max)
print(f"ALTURA MÁXIMA ATINGIDA: {altura_maxima:.3f} km")